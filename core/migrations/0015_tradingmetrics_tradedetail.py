# Generated by Django 5.2 on 2025-05-07 17:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0014_expertadvisor_is_premium_licensekey_expires_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TradingMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('total_trades', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('losing_trades', models.IntegerField(default=0)),
                ('profit_factor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_profit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_loss', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('net_profit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('max_drawdown', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('avg_risk_reward', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('sharpe_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('strategy', models.CharField(blank=True, max_length=100)),
                ('timeframe', models.CharField(blank=True, max_length=20)),
                ('traded_pairs', models.JSONField(default=list)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trading Metrics',
                'verbose_name_plural': 'Trading Metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TradeDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.CharField(max_length=50)),
                ('symbol', models.CharField(max_length=20)),
                ('strategy', models.CharField(blank=True, max_length=100)),
                ('bot_name', models.CharField(blank=True, max_length=100)),
                ('trade_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=10)),
                ('open_time', models.DateTimeField()),
                ('close_time', models.DateTimeField(blank=True, null=True)),
                ('open_price', models.DecimalField(decimal_places=5, max_digits=12)),
                ('close_price', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('lot_size', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('take_profit', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('profit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSED', 'Closed'), ('CANCELED', 'Canceled')], max_length=10)),
                ('timeframe', models.CharField(blank=True, max_length=10)),
                ('entry_reason', models.TextField(blank=True)),
                ('exit_reason', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_details', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-open_time'],
            },
        ),
    ]
